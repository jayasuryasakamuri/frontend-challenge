{"version":3,"sources":["assets sync /^/.//.*$","assets/add-row.svg","assets/delete.svg","assets/fetch-transcriptions.svg","assets/person.svg","assets/upload.svg","components/Container.js","components/GetImg.js","components/Header.js","components/Checkbox.js","components/ListItem.js","components/TranscriptionsList.js","components/GlobalStyles.js","utils/Api.js","components/AddNewItem.js","App.js","serviceWorker.js","index.js"],"names":["map","./add-row.svg","./delete.svg","./fetch-transcriptions.svg","./person.svg","./upload.svg","webpackContext","req","id","webpackContextResolve","__webpack_require__","e","Error","code","keys","Object","resolve","module","exports","p","Container","styled","div","_templateObject","GetImg","props","src","require","concat","name","react_default","a","createElement","assign","alt","Header","header","Header_templateObject","components_Header","components_Container","onClick","uploadItems","title","fetchItems","CheckMark","Checkbox_templateObject","CheckboxContainer","label","_templateObject2","Checkbox","type","ItemBody","ListItem_templateObject","ListItem","li","ListItem_templateObject2","ItemTitle","_templateObject3","ItemContent","_templateObject4","components_ListItem","_props$item","item","voice","text","titleRef","useRef","contentRef","handlePaste","preventDefault","clipboardData","getData","document","execCommand","disableNewlines","event","keyCode","which","returnValue","ref","contentEditable","onBlur","changeItemValue","onPaste","onKeyPress","suppressContentEditableWarning","deleteItem","Main","main","TranscriptionsList_templateObject","TranscriptionsList","items","length","key","showListItems","GlobalStyles","createGlobalStyle","GlobalStyles_templateObject","axios","create","baseURL","AddNewItem","AddNewItem_templateObject","components_AddNewItem","addNewItem","App","_useState","useState","_useState2","slicedToArray","setItems","_ref","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","API","get","sent","data","stop","apply","this","arguments","_ref2","_callee2","_context2","post","alert","Fragment","components_GlobalStyles","components_TranscriptionsList","updatedItems","current","innerHTML","trim","filter","toConsumableArray","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2ebb4f5c.chunk.js","sourcesContent":["var map = {\n\t\"./add-row.svg\": 37,\n\t\"./delete.svg\": 38,\n\t\"./fetch-transcriptions.svg\": 39,\n\t\"./person.svg\": 40,\n\t\"./upload.svg\": 41\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 36;","module.exports = __webpack_public_path__ + \"static/media/add-row.2faf6110.svg\";","module.exports = __webpack_public_path__ + \"static/media/delete.357748aa.svg\";","module.exports = __webpack_public_path__ + \"static/media/fetch-transcriptions.b1555b11.svg\";","module.exports = __webpack_public_path__ + \"static/media/person.ac54f1e5.svg\";","module.exports = __webpack_public_path__ + \"static/media/upload.ac5ba9c4.svg\";","import styled from \"styled-components\"\n\nconst Container = styled.div`\n    position: relative;\n    display : flex;\n    align-items : center;\n    width : 100%;\n    max-width : 1000px;\n    margin: 0px auto;\n\tpadding: 0 20px;\n`\nexport default Container;","import React from 'react';\n\nexport default (props)=>{\n    let src = require(`../assets/${props.name}`);\n    return <img alt=\"\" {...props} src={src}/> ;\n};","import React from 'react';\nimport styled from 'styled-components'\nimport Container from './Container'\nimport Img from './GetImg'\n\nconst Header = styled.header`\n\theight: 69px;\n\tdisplay: flex;\n\talign-items: center;\n\tfont-size: 18px;\n\tfont-weight: 500;\n\tcolor: #414C5E;\n\tbackground: #FFFFFF;\n\tbox-shadow: 0px 1px 3px rgba(0, 0, 0, 0.12), 0px 1px 2px rgba(0, 0, 0, 0.24);\n\tz-index: 100;\n\n\timg{\n\t\tmargin-left:20px;\n\t\tcursor : pointer;\n\t}\n\n\n\timg:first-child{\n\t\tmargin-left:auto;\n\t}\n`\n\nexport default (props)=>{\n\treturn (\n\t\t<Header>\n\t\t\t<Container>\n\t\t\t\tTranscriptions\n\t\t\t\t<Img name = \"upload.svg\" \n\t\t\t\t\tonClick={props.uploadItems}\n\t\t\t\t\ttitle=\"Upload Items\"\n\t\t\t\t\talt = \"Upload Items\"\n\t\t\t\t/>\n\t\t\t\t<Img name = \"fetch-transcriptions.svg\" \n\t\t\t\t\tonClick={props.fetchItems}\n\t\t\t\t\ttitle=\"Fetch Items\"\n\t\t\t\t\talt = \"Fetch Items\"\n\t\t\t\t/>\n\t\t\t</Container>\n\t\t</Header>\n\t)\n}\n\n","import React from 'react';\nimport styled from 'styled-components'\n\nconst CheckMark = styled.div`\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 16px;\n    width: 16px;\n    background-color: transparent;\n    border: 2px solid #859eff;\n    \n    &::after {\n        content: \"\";\n        position: absolute;\n        display: none;\n        left: 4px;\n        top: 0;\n        width: 5px;\n        height: 10px;\n        border: solid white;\n        border-width: 0 2px 2px 0;\n        -webkit-transform: rotate(45deg);\n        -ms-transform: rotate(45deg);\n        transform: rotate(45deg);\n    }\n`\n\nconst CheckboxContainer = styled.label`\n    display: block;\n    position: relative;\n    height: 16px;\n    width: 16px;\n    cursor: pointer;\n    margin-top : 4px;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n\n    input{\n        position: absolute;\n        opacity: 0;\n        cursor: pointer;\n        height: 0;\n        width: 0;\n    }\n\n    &:hover input~ ${CheckMark} {\n        background-color: #F6F7F8;\n    }\n\n    input:checked~ ${CheckMark}{\n        background-color: #859eff;\n    }\n\n    input:checked~${CheckMark}:after {\n        display: block;\n    }\n`\n\nexport default ()=>{\n    return (\n        <CheckboxContainer title = \"Select Item\">\n            <input type=\"checkbox\"/>\n            <CheckMark></CheckMark>\n        </CheckboxContainer>\n    )\n};  ","import React,{useRef} from 'react';\nimport styled from 'styled-components'\nimport Checkbox from './Checkbox'\nimport Img from './GetImg'\n\nconst ItemBody = styled.div`\n    display : flex;\n    flex-direction:column;\n    flex-grow : 1; \n    padding : 0 10px;\n\n    >div{\n        max-height : 400px;\n        width : 100%;\n        overflow : hidden;\n        overflow-y: auto;\n        font-size : 1rem;\n        padding: 4px;\n        line-height: 1.2rem;\n        word-break: break-all;\n    }\n\n    >div:focus{\n        outline: none;\n    }\n`\n\nconst ListItem = styled.li`\n    width : 100%;\n    padding : 1.5rem 1.25rem;\n    display:flex;\n    \n    &:not(:last-child){\n        border-bottom : 1px solid #EAEDEF;\n    }\n\n    >div:not(${ItemBody}) {\n        flex : 0 0 2rem;\n    }\n\n    >div:last-child img{\n        display:none;\n        cursor : pointer;\n    }\n    \n    &:hover{\n        >div:last-child img{\n        display:initial;\n    }\n    }\n`\n\nconst ItemTitle = styled.div`\n    color: #566074;\n    font-weight : 600;\n`\n\nconst ItemContent = styled.div`\n    color: #778195;\n\tfont-family: 'Open Sans', sans-serif;\n`\n\nexport default (props)=>{\n    const {id,voice,text} = props.item;\n    const titleRef = useRef(null); \n    const contentRef = useRef(null); \n\n    const handlePaste = (e) =>{\n        e.preventDefault();\n        const text = e.clipboardData.getData('text/plain');\n        document.execCommand('insertHTML', false, text);\n    }\n\n    const disableNewlines = event => {\n        const keyCode = event.keyCode || event.which\n    \n        if (keyCode === 13) {\n            event.returnValue = false\n            if (event.preventDefault) event.preventDefault()\n        }\n    }\n\n    return (\n        <ListItem>\n            <div>\n                <Checkbox />\n            </div>\n            <div>\n                <Img name = \"person.svg\" \n                        title=\"person\"\n                        alt = \"person\"\n                />\n            </div>\n            <ItemBody>\n                <ItemTitle ref={titleRef} contentEditable={true} \n                    onBlur={()=>props.changeItemValue(id,'voice',titleRef)} \n                    onPaste={handlePaste}\n                    onKeyPress={disableNewlines}\n                    suppressContentEditableWarning={true}>\n                    {voice}\n                </ItemTitle>\n                <ItemContent ref={contentRef} contentEditable={true}\n                    onBlur={()=>props.changeItemValue(id,'text',contentRef)}\n                    onPaste={handlePaste}\n                    onKeyPress={disableNewlines}\n                    suppressContentEditableWarning={true}>\n                    {text}\n                </ItemContent>\n            </ItemBody>\n            <div>\n                <Img onClick={()=>props.deleteItem(id)} name= \"delete.svg\" \n                        title=\"Delete Item\"\n                        alt = \"Delete Item\"\n                />\n            </div>\n        </ListItem>\n    )\n}","import React from 'react';\nimport styled from 'styled-components'\nimport Container from './Container'\nimport ListItem from './ListItem'\n\nconst Main = styled.main`\n    margin-top: 30px;\n\n    ${Container}{\n\n        ul{\n            background: #FFFFFF;\n            border: 1px solid #EAEDEF;\n            list-style : none;\n            width : 100%;\n            padding : 0;\n            margin : 0;\n            display:flex;\n            flex-direction: column;\n        }\n    }\n`\nconst showListItems = (props)=>{\n    return props.items.map((item) => {\n        return <ListItem key={item.id} \n                    changeItemValue = {props.changeItemValue}\n                    deleteItem={props.deleteItem} item = {item}/>\n    });\n} \n\nconst TranscriptionsList = (props) => {\n\n    if(!props.items.length > 0){\n        return null;\n    }\n\n    return (\n        <Main>\n            <Container>\n                <ul>\n                    {showListItems(props)}\n                </ul>\n            </Container>\n        </Main>\n    );\n};\n\nexport default TranscriptionsList;","import { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyles = createGlobalStyle`\n\t*, :after, :before {\n\t\t-webkit-box-sizing: border-box;\n\t\tbox-sizing: border-box;\n    }\n    \n\t@import url('https://fonts.googleapis.com/css?family=Montserrat:500,600');\n    @import url('https://fonts.googleapis.com/css?family=Open+Sans');\n    \n\tbody{\n        background: #F6F7F8;\n        font-family: 'Montserrat', sans-serif;\n        padding:0;\n        margin:0;\n    }\n    \n    ::-webkit-scrollbar {\n        width: 7px;\n    }\n\n    ::-webkit-scrollbar-thumb {\n        border-radius: 10px;\n        background-color: #ddd;\n    }\n`\n\nexport default GlobalStyles;","import axios from 'axios';\n\nexport default axios.create({\n    baseURL: `http://www.mocky.io/v2/5ae1c5792d00004d009d7e5c`\n});","import React from 'react';\nimport styled from 'styled-components'\nimport Img from './GetImg'\n\nconst AddNewItem = styled.div`\n    text-align : center;\n    margin:30px 0;\n\n    img {\n        cursor:pointer;\n    }\n`\n\nexport default (props)=>{\n    return <AddNewItem>\n\t\t\t\t<Img name = \"add-row.svg\" \n\t\t\t\t\t\tonClick={props.addNewItem}\n\t\t\t\t\t\ttitle=\"upload items\"\n\t\t\t\t\t\talt = \"upload items\"\n\t\t\t\t/>\n            </AddNewItem>;\n};","import React,{useState} from 'react';\nimport Header from './components/Header'\nimport TranscriptionsList from './components/TranscriptionsList'\nimport GlobalStyles from './components/GlobalStyles'\nimport API from './utils/Api';\nimport AddNewItem from './components/AddNewItem'\n\nconst App = () => {\n\tconst [items, setItems]= useState([]);\n\n\tconst fetchItems = async ()=>{\n\t\tconst response = await API.get();\n\t\tsetItems(response.data);\n\t}\n\t\n\tconst uploadItems = async ()=>{\n\t\tif(items.length > 0){\n\t\t\tconst response = await API.post('',items);\n\t\t\tresponse.data.length>0 && alert('Data uploaded successfully');\n\t\t}else{\n\t\t\talert('Data is empty...');\n\t\t}\n\t}\n\n\tconst addNewItem = ()=>{\n\t\tvar id = items.length > 0 ? items[items.length - 1].id + 1 : items.length + 1;\n\t\tsetItems([...items,{\n\t\t\tid : id,\n\t\t\ttext : 'Content',\n\t\t\tvoice : 'New Item'\n\t\t}]);\n\t}\n\n\tconst changeItemValue=(id,key,ref)=>{\n\t\tlet updatedItems = items.map(item =>{\n\t\t\tif(item.id === id && item[key] !== ref.current.innerHTML.trim()){\n\t\t\t\titem[key] = ref.current.innerHTML.trim();\n\t\t\t}\n\t\t\treturn item; \n\t\t})\n\t\tsetItems(updatedItems);\n\t}\n\n\tconst deleteItem = (id)=>{\n\t\tsetItems(items.filter(item => id !== item.id));\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<GlobalStyles />\n\t\t\t<Header uploadItems={uploadItems} fetchItems = {fetchItems}/>\n\t\t\t<TranscriptionsList items={items} changeItemValue={changeItemValue} deleteItem={deleteItem}/>\n\t\t\t<AddNewItem addNewItem={addNewItem}/>\n\t\t</>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}